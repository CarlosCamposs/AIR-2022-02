contour(sort(u1),sort(u2),z,nint=T,add=T)
contour(sort(u1),sort(u2),z,nint=5,add=T)
# Otra opción para curvas de nivel
library(ggplot2)
# Datos
df <- data.frame(x = sort(u1), y = sort(u2))
ggplot(df, aes(x = sort(u1), y = sort(u2))) +
geom_density_2d()
ggplot(df, aes(x = sort(u1), y = sort(u2))) +
geom_density_2d(bins=20)
ggplot(df, aes(x = sort(u1), y = sort(u2))) +
geom_density_2d(bins=100)
ggplot(df, aes(x = sort(u1), y = sort(u2))) +
geom_density_2d(bins=10)
![](6.2.png)
qf(0.05, 2, 1195 lower.tail=F)
qf(0.05, 2, 1195, lower.tail=F)
qf(0.95, 1, 71, lower.tail=F)
qf(0.95, 1, 71, lower.tail=T)
a<-runif(n=100)
b<-runif(n=100)
# Creamos la función de la cópula
grafica<-function(a,b){
a*b
}
z<-outer(a,b,grafica)
image(sort(a),sort(b),z)
a
z<-outer(sort(a),sort(b),grafica)
image(sort(a),sort(b),z)
image(sort(a),sort(b),z)
contour(sort(a),sort(b),z,add=T)
library(ggplot2)
# Datos
df <- data.frame(x = sort(a), y = sort(b))
ggplot(df, aes(x = sort(a), y = sort(b))) +
geom_density_2d(bins=10) #Salen curvas raras
a<-runif(n=1000)
b<-runif(n=1000)
# Creamos la función de la cópula
grafica<-function(a,b){
a*b
}
# Datos
df <- data.frame(x = sort(a), y = sort(b))
ggplot(df, aes(x = sort(a), y = sort(b))) +
geom_density_2d(bins=10) #Salen curvas raras
seq(4,35,length.out=7)
seq(0,1,length.out=7)
seq(0,1,length.out=10)
seq(0,1,length.out=100)
seq(0,1,length.out=1000)
a<-seq(0,1,length.out=1000)
b<-seq(0,1,length.out=1000)
# Datos
df <- data.frame(x = a, y = b)
ggplot(df, aes(x = a, y = b) +
ggplot(df, aes(x = a, y = b) +
geom_density_2d(bins=10)) #Salen curvas raras
ggplot(df, aes(x = a, y = b)) +
# Datos
df <- data.frame(x = a, y = b)
ggplot(df, aes(x = a, y = b)) +
geom_density_2d(bins=10) #Salen curvas raras
a<-runif(n=1000)
b<-runif(n=1000)
u<-v<-seq(0,1,length=100)
u
v
grafica<-function(a,b){
a*b
}
z<-outer(x,y,grafica)
z<-outer(u,v,grafica)
filled.contour(x,y,z)
filled.contour(u,v,z)
cols = rev(colorRampPalette(c('darkred','red','blue','lightblue'))(24))
filled.contour(u,v,z,col=cols)
cols = rev(colorRampPalette(c('darkred','red','blue'))(24))
filled.contour(u,v,z,col=cols)
cols = rev(colorRampPalette(c('darkred','red','darkviolet','blue'))(24))
filled.contour(u,v,z,col=cols)
filled.contour(u,v,z,col=cols,axes = c("u","v"))
filled.contour(u,v,z,col=cols,axes = T)
filled.contour(u,v,z,col=cols,plot.title = "Curvas de nivel")
filled.contour(u,v,z,col=cols,plot.title = title(main = "The Topography of Maunga Whau"))
filled.contour(u,v,z,col=cols,plot.title = title(main = "Curvas de nivel"))
filled.contour(u,v,z,col=cols,plot.title = title(main = "Curvas de nivel"),xlab = "u", ylab = "v"))
filled.contour(u,v,z,col=cols,plot.title = title(main = "Curvas de nivel"),xlab = "u", ylab = "v")
filled.contour(u,v,z,col=cols,plot.title = title(main = "Curvas de nivel"),xlab = "u", ylab = "v")
filled.contour(u,v,z,col=cols,plot.title = title(main = "Curvas de nivel"),xlab = "u", ylab = "v",axes=F)
filled.contour(u,v,z,col=cols,plot.title = title(main = "Curvas de nivel"),xlab = "u", ylab = "v")
qf(0.05, 3, 347, lower.tail=F)
library(nnet, lib.loc = "C:/Program Files/R/R-4.2.1/library")
detach("package:nnet", unload = TRUE)
install.packages("nnet")
install.packages("MCMCpack")
install.packages("sampleSelection")
library(zoo) # for time series functions
library(pdfetch) # for retrieving data
library(lmtest) #for `coeftest()` and `bptest()`.
library(broom) #for `glance(`) and `tidy()`
library(car) #for `hccm()` robust standard errors
library(sandwich)
library(knitr) #for kable()
library(forecast)
library(orcutt) # for the `cochrane.orcutt()` function
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
library(nlWaldTest)
library(forecast)
library(tables)
library(haven)
library(nnet)
library(MCMCpack)
library(sampleSelection)
library(corrplot)
setwd("C:/Users/Carlos Campos/Desktop/GitHub/AIR-2022-02/Proyecto 2/R")
database<-read.csv("database.csv",header=TRUE)
datos$td<-as.numeric(datos$td)
# Restringimos el modelo a partir de 2005, esto se hace para considerar los valores
# de la TD
datos<-database
attach(datos)
ln_actvindustrial[181] # Tiene valor NULL
# La columna de td la convertimos en 'numeric', ya que los valores NULL hicieron
# que R leyera la columna como character
datos$td<-as.numeric(datos$td)
datos$ln_actvindustrial<-as.numeric(datos$ln_actvindustrial)
datos$ln_inpp<-as.numeric(datos$ln_inpp)
class(datos$ln_inpp)
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
corrplot(correlacion, method="number", type="upper")
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
datos$td<-as.numeric(datos$td)
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
attach(datos)
# Restringimos el modelo a partir de 2005, esto se hace para considerar los valores
# de la TD
datos<-database[,-c(1)]
View(datos)
# La columna de td la convertimos en 'numeric', ya que los valores NULL hicieron
# que R leyera la columna como character
datos$td<-as.numeric(datos$td)
datos$ln_actvindustrial<-as.numeric(datos$ln_actvindustrial)
datos$ln_inpp<-as.numeric(datos$ln_inpp)
datos$td<-as.numeric(datos$td)
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
corrplot(correlacion, method="number", type="upper")
# Cargamos los datos de la proxy de PD
pd_tbm <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "TBM")
tbm_empresas<-pd_tbm$Empresas
score_empresasTBM<-vector()
#for (i in 1:nrow(datos)){
#  score_empresasTBM[i]<-log(tbm_empresas[i]/(1-tbm_empresas[i]))
#}
#score_empresasTBM
score_empresasTBM<-log(tbm_empresas/(1-tbm_empresas))
# Modelo 1
modelo1<-lm(score_empresasTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp,data=datos)
summary(modelo1)
# Cargamos los datos
setwd("C:/Users/Carlos Campos/Desktop/GitHub/AIR-2022-02/Proyecto 2/R")
database<-read.csv("database.csv",header=TRUE)
View(database)
datos<-database[50:nrow(database),-c(1)]
attach(datos)
# La columna de td la convertimos en 'numeric', ya que los valores NULL hicieron
# que R leyera la columna como character
datos$td<-as.numeric(datos$td)
datos$ln_actvindustrial<-as.numeric(datos$ln_actvindustrial)
datos$ln_inpp<-as.numeric(datos$ln_inpp)
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
corrplot(correlacion, method="number", type="upper")
# Cargamos los datos de la proxy de PD
pd_tbm <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "TBM")
# Tomamos solo las observaciones correspondientes a 2005 en adelante
pd_tbm<-pd_tbm[50:nrow(database),]
tbm_empresas<-pd_tbm$Empresas
score_empresasTBM<-vector()
#for (i in 1:nrow(datos)){
#  score_empresasTBM[i]<-log(tbm_empresas[i]/(1-tbm_empresas[i]))
#}
#score_empresasTBM
score_empresasTBM<-log(tbm_empresas/(1-tbm_empresas))
# Modelo 1
modelo1<-lm(score_empresasTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp,data=datos)
summary(modelo1)
# Cargamos los datos
setwd("C:/Users/Carlos Campos/Desktop/GitHub/AIR-2022-02/Proyecto 2/R")
database<-read.csv("database.csv",header=TRUE)
datos<-database[50:nrow(database),-c(1)]
attach(datos)
datos$td<-as.numeric(datos$td)
datos$ln_actvindustrial<-as.numeric(datos$ln_actvindustrial)
datos$ln_inpp<-as.numeric(datos$ln_inpp)
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
corrplot(correlacion, method="number", type="upper")
# Otro tipo de gráfico de correlación
#install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(datos, histogram=F, pch=19)
# Cargamos los datos de la proxy de PD
pd_tbm <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "TBM")
# Tomamos solo las observaciones correspondientes a 2005 en adelante
pd_tbm<-pd_tbm[50:nrow(database),]
tbm_empresas<-pd_tbm$Empresas
score_empresasTBM<-vector()
#for (i in 1:nrow(datos)){
#  score_empresasTBM[i]<-log(tbm_empresas[i]/(1-tbm_empresas[i]))
#}
#score_empresasTBM
score_empresasTBM<-log(tbm_empresas/(1-tbm_empresas))
# Modelo 1
modelo1<-lm(score_empresasTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp,data=datos)
summary(modelo1)
tbm_consumo<-pd_tbm$Consumo
score_consumoTBM<-vector()
score_consumoTBM<-log(tbm_consumo/(1-tbm_consumo))
modelo2<-lm(score_consumoTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp,data=datos)
summary(modelo2)
modelo1<-lm(score_empresasTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp,data=datos)
tbm_vivienda<-pd_tbm$Vivienda
score_viviendaTBM<-vector()
score_viviendaTBM<-log(tbm_vivienda/(1-tbm_vivienda))
modelo3<-lm(score_viviendaTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp,data=datos)
summary(modelo3)
pd_santdr <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "Santander")
pd_santdr<-pd_santdr[50:nrow(database),]
santdr_empresas<-pd_santdr$Empresas
score_empresasSANTDR<-vector()
score_empresasSANTDR<-log(santdr_empresas/(1-santdr_empresas))
modelo4<-lm(score_empresasSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp,data=datos)
summary(modelo4)
santdr_consumo<-pd_santdr$Consumo
score_consumoSANTDR<-vector()
score_consumoSANTDR<-log(santdr_consumo/(1-santdr_consumo))
modelo5<-lm(score_consumoSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp,data=datos)
summary(modelo5)
santdr_vivienda<-pd_santdr$Vivienda
score_viviendaSANTDR<-vector()
score_viviendaSANTDR<-log(santdr_vivienda/(1-santdr_vivienda))
modelo6<-lm(score_viviendaSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp,data=datos)
summary(modelo6)
#//
pruebamod1<-lm(formula=y~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
#//
pruebamod1<-lm(formula=score_empresasTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
summary(pruebamod1)
step(pruebamod1,direction="both",trace=0)
#//
pruebamod1<-lm(formula=score_empresasTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
summary(pruebamod1)
#//
attach(datos)
pruebamod1<-lm(formula=score_empresasTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
summary(pruebamod1)
step(pruebamod1,direction="both",trace=0)
# Modelo propuesto
pruebamod12<-lm(score_empresasTBM~tasa_cetes+pib+td+ln_ipc+ln_actvindustrial+ln_ipp, data=datos)
# Modelo propuesto
pruebamod12<-lm(score_empresasTBM~tasa_cetes+pib+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(pruebamod11)
summary(pruebamod12)
prueba1<-lm(formula=score_empresasTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
summary(prueba1)
step(prueba1,direction="both",trace=0)
# Modelo propuesto
prueba1_mod<-lm(score_empresasTBM~tasa_cetes+pib+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(prueba1_mod)
prueba2<-lm(score_consumoTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba2,direction="both",trace=0)
# Modelo propuesto
prueba2_mod<-lm(score_empresasTBM~inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(prueba2_mod)
prueba2<-lm(score_consumoTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba2,direction="both",trace=0)
# Modelo propuesto
prueba2_mod<-lm(score_consumoTBM~inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(prueba2_mod)
prueba2<-lm(score_consumoTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba2,direction="both",trace=0)
# Modelo propuesto
prueba2_mod<-lm(score_consumoTBM~inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(prueba2_mod)
#//
attach(datos)
prueba3<-lm(score_viviendaTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba2,direction="both",trace=0)
step(prueba3,direction="both",trace=0)
prueba3<-lm(score_viviendaTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba3,direction="both",trace=0)
# Modelo propuesto
prueba2_mod<-lm(score_viviendaTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_inpp, data=datos)
summary(prueba2_mod)
prueba4<-lm(score_empresasSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba4,direction="both",trace=0)
prueba1<-lm(formula=score_empresasTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba1,direction="both",trace=0)
# Modelo propuesto
prueba1_mod<-lm(score_empresasTBM~tasa_cetes+pib+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(prueba1_mod)
prueba2<-lm(score_consumoTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba2,direction="both",trace=0)
# Modelo propuesto
prueba2_mod<-lm(score_consumoTBM~inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(prueba2_mod)
prueba3<-lm(score_viviendaTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba3,direction="both",trace=0)
# Modelo propuesto
prueba3_mod<-lm(score_viviendaTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_inpp, data=datos)
summary(prueba3_mod)
prueba4<-lm(score_empresasSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba4,direction="both",trace=0)
# Modelo propuesto
prueba4_mod<-lm(score_empresasSANTDR~tasa_cetes+inflacion+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
# Modelo propuesto
prueba4_mod<-lm(score_empresasSANTDR~tasa_cetes+inflacion+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(prueba4_mod)
prueba5<-lm(score_consumoSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba5,direction="both",trace=0)
# Modelo propuesto
prueba5_mod<-lm(score_consumoSANTDR~tasa_cetes+inflacion+td+ln_ipc+ln_actvindustrial, data=datos)
summary(prueba5_mod)
prueba6<-lm(score_viviendaSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
step(prueba6,direction="both",trace=0)
# Modelo propuesto
prueba6_mod<-lm(score_viviendaSANTDR~tasa_cetes+inflacion+pib+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(prueba6_mod)
prueba6<-lm(score_viviendaSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
prueba6<-lm(score_viviendaSANTDR~., data=datos)
prueba6<-lm(score_viviendaSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
prueba6
prueba6<-lm(score_viviendaSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp)
summary(prueba6)
prueba6<-lm(score_viviendaSANTDR~., data=datos)
summary(prueba6)
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
library(nlWaldTest)
library(forecast)
library(tables)
library(haven)
library(nnet)
library(MCMCpack)
library(sampleSelection)
library(corrplot)
# Cargamos los datos
setwd("C:/Users/Carlos Campos/Desktop/GitHub/AIR-2022-02/Proyecto 2/R")
database<-read.csv("database (2).csv",header=TRUE)
View(database)
# Eliminamos la columna de fecha y a partir del registro 50 empiezan TODAS las variables
# macro a tomar valores
datos<-database[50:nrow(database),c(-1)]
View(datos)
# Verificamos que todas las variables sean numéricas
attach(datos)
class(tasa_cetes)
class(inflacion)
class(pib)
class(ln_tc)
class(td)
class(ln_ipc)
class(ln_actvindustrial)
class(ln_inpp)
class(ahorro)
class(ln_export)
class(ln_import)
class(inversion)
# Las variables anteriores las convertimos en "numeric" para poder realizar el modelo
datos$td<-as.numeric(datos$td)
datos$ln_actvindustrial<-as.numeric(datos$ln_actvindustrial)
# Cargamos los datos
setwd("C:/Users/Carlos Campos/Desktop/GitHub/AIR-2022-02/Proyecto 2/R")
database<-read.csv("database (2).csv",header=TRUE)
# Eliminamos la columna de fecha y a partir del registro 50 empiezan TODAS las variables
# macro a tomar valores
datos<-database[50:nrow(database),c(-1)]
# Verificamos que todas las variables sean numéricas
attach(datos)
class(td)
class(ln_actvindustrial)
class(ln_inpp)
class(td)
class(ln_inpp)
# Las variables anteriores las convertimos en "numeric" para poder realizar el modelo
datos$td<-as.numeric(datos$td)
datos$ln_inpp<-as.numeric(datos$ln_inpp)
correlacion<-round(cor(datos), 2)
corrplot(correlacion, method="number", type="upper")
library("PerformanceAnalytics")
chart.Correlation(datos, histogram=F, pch=19)
##### EMPRESAS
tbm_empresas<-pd_tbm$Empresas
# ////////////////////////////////////////////////////////////////////
# TBM
pd_tbm <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "TBM")
##### EMPRESAS
tbm_empresas<-pd_tbm$Empresas
# ////////////////////////////////////////////////////////////////////
# TBM
pd_tbm <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "TBM")
pd_tbm<-pd_tbm[50:nrow(database),]
##### EMPRESAS
tbm_empresas<-pd_tbm$Empresas
score_empresasTBM<-vector()
score_empresasTBM<-log(tbm_empresas/(1-tbm_empresas))
modelo1<-lm(score_empresasTBM~.,data=datos)
summary(modelo1)
prueba1<-lm(score_empresasTBM~., data=datos)
step(prueba1,direction="both",trace=0)
# Modelo propuesto
prueba1_mod<-lm(score_empresasTBM~tasa_cetes+pib+td+ln_ipc+ln_actvindustrial+ln_inpp+ahorro+ln_export+inversion, data=datos)
summary(prueba1_mod)
############################################################# CONSUMO
tbm_consumo<-pd_tbm$Consumo
score_consumoTBM<-vector()
score_consumoTBM<-log(tbm_consumo/(1-tbm_consumo))
modelo2<-lm(score_consumoTBM~.,data=datos)
summary(modelo2)
#////////////////////////////////////
prueba2<-lm(score_consumoTBM~., data=datos)
step(prueba2,direction="both",trace=0)
# El mejor modelo:
prueba2_mod<-lm(score_consumoTBM~inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp+ahorro, data=datos)
summary(prueba2_mod)
step(prueba2,direction="both",trace=0)
# El mejor modelo:
prueba2_mod<-lm(score_consumoTBM~inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp+ahorro, data=datos)
summary(prueba2_mod)
############################################################# VIVIENDA
tbm_vivienda<-pd_tbm$Vivienda
score_viviendaTBM<-vector()
score_viviendaTBM<-log(tbm_vivienda/(1-tbm_vivienda))
modelo3<-lm(score_viviendaTBM~.,data=datos)
summary(modelo3)
prueba3<-lm(score_viviendaTBM~., data=datos)
step(prueba3,direction="both",trace=0)
# Modelo propuesto
prueba3_mod<-lm(score_viviendaTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_inpp, data=datos)
summary(prueba3_mod)
step(prueba3,direction="both",trace=0)
summary(prueba3_mod)
# ////////////////////////////////////////////////////////////////////
# SANTANDER
pd_santdr <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "Santander")
pd_santdr<-pd_santdr[50:nrow(database),]
############################################################# EMPRESAS
santdr_empresas<-pd_santdr$Empresas
score_empresasSANTDR<-vector()
score_empresasSANTDR<-log(santdr_empresas/(1-santdr_empresas))
modelo4<-lm(score_empresasSANTDR~.,data=datos)
summary(modelo4)
prueba4<-lm(score_empresasSANTDR~., data=datos)
step(prueba4,direction="both",trace=0)
# Modelo propuesto
prueba4_mod<-lm(score_empresasSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp+ahorro+ln_export+ln_import+inversion, data=datos)
summary(prueba4_mod)
############################################################# CONSUMO
santdr_consumo<-pd_santdr$Consumo
score_consumoSANTDR<-vector()
score_consumoSANTDR<-log(santdr_consumo/(1-santdr_consumo))
modelo5<-lm(score_consumoSANTDR~.,data=datos)
summary(modelo5)
prueba5<-lm(score_consumoSANTDR~., data=datos)
step(prueba5,direction="both",trace=0)
# Modelo propuesto
prueba5_mod<-lm(score_consumoSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc+ln_actvindustrial+ln_inpp+ln_import+inversion, data=datos)
summary(prueba5_mod)
############################################################# VIVIENDA
santdr_vivienda<-pd_santdr$Vivienda
score_viviendaSANTDR<-vector()
score_viviendaSANTDR<-log(santdr_vivienda/(1-santdr_vivienda))
modelo6<-lm(score_viviendaSANTDR~.,data=datos)
summary(modelo6)
prueba6<-lm(score_viviendaSANTDR~., data=datos)
step(prueba6,direction="both",trace=0)
# Modelo propuesto
prueba6_mod<-lm(score_viviendaSANTDR~tasa_cetes+pib+ln_tc+td+ln_ipc+ahorro, data=datos)
summary(prueba6_mod)
