summary(mod6)$adj.r.squared
summary(mod7)$adj.r.squared
View(edu_inc)
mod8<-lm(faminc~hedu+wedu+k16, data=edu_inc)
View(edu_inc)
mod8<-lm(faminc~hedu+wedu+kl6, data=edu_inc)
mod9<-lm(faminc~hedu+k16+xtra_x5+xtra_x6, data=edu_inc)
mod9<-lm(faminc~hedu+kl6+xtra_x5+xtra_x6, data=edu_inc)
#### Primer modelo
kable(tidy(mod8),caption="El modelo correcto")
anova(mod8)
SSEmod6<-anova(mod8)[3,4]
SSEmod6
SSEmod8<-anova(mod8)[3,4]
SSEmod8
SSEmod8<-anova(mod8)[3,4]
SSEmod8
SSEmod8<-anova(mod8)[4,2]
SSEmod8
SSEmod6<-anova(mod6)[3,2]
SSEmod7<-anova(mod7)[2,2]
# R2 ajustada
summary(mod8)
summary(mod8)$adj.r.squared
#### Segundo modelo
kable(tidy(mod9),caption="El modelo incorrecto")
anova(mod9)
SSEmod7<-anova(mod9)[5,2]
SSEmod9<-anova(mod9)[5,2]
SSEmod9
SSEmod7<-anova(mod7)[2,2]
SSEmod6<-anova(mod6)[3,2]
anova(mod6)
anova(mod7)
summary(mod6)
summary(mod7)
anova(mod6,mod7)
anova(mod9)
SSEmod9<-anova(mod9)[5,2]
SSEmod9
SSEmod8<-anova(mod8)[4,2]
anova(mod8)[4,2]
SSEmod8
anova(mod8)
summary(mod8)$adj.r.squared
summary(mod7)$adj.r.squared
# R2 ajustada
summary(mod7)
summary(mod8)$r.squared
summary(mod7)$r.squared
# R2 ajustada
summary(mod9)
summary(mod9)$adj.r.squared
summary(mod9)$r.squared
anova(mod6,mod7)
anova(mod8,mod9)
# R2 ajustada
summary(mod9)
mod9<-lm(faminc~hedu+kl6+xtra_x5+xtra_x6, data=edu_inc)
# R2 ajustada
summary(mod9)
summary(mod9)$adj.r.squared
summary(mod9)$r.squared
mod8<-lm(faminc~hedu+wedu+kl6, data=edu_inc)
anova(mod8,mod9)
anova(mod6,mod7)
anova(mod8,mod9)
# R2 ajustada
summary(mod8)
mod8<-lm(faminc~hedu+wedu+kl6, data=edu_inc)
#### Primer modelo
kable(tidy(mod8),caption="El modelo correcto")
#### Primer modelo
kable(tidy(mod8),caption="Tercer modelo")
SSEmod8<-anova(mod8)[4,2]
SSEmod8
SSEmod9<-anova(mod9)[5,2]
SSEmod9
SSEmod7
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
# Cargamos la base de datos
edu_inc<-read_excel("C:/Users/Carlos Campos/Desktop/Noveno semestre/Econometría/Bases de datos/edu_inc.xlsx")
edu_inc
attach(edu_inc)
View(edu_inc)
mod6<-lm(faminc~hedu+wedu, data=edu_inc)
#### Primer modelo
kable(tidy(mod6),caption="El modelo correcto")
# R2 ajustada
summary(mod6)
#### Primer modelo
kable(tidy(mod6),caption="El modelo correcto")
# R2 ajustada
summary(mod6)
SSEmod6<-anova(mod6)[3,2]
SSEmod6
anova(mod6)
# Primer modelo
# Ingreso familiar ~ HEDU
mod7<-lm(faminc~hedu, data=edu_inc)
anova(mod7)
# R2 ajustada
summary(mod7)
SSEmod7<-anova(mod7)[2,2]
SSEmod7
anova(mod6,mod7)
length(edu_inc)
J<-1
N<-428
K<-3
SSEr<-SSEmod7
SSEu<-SSEmod6
fval<-((SSEr-SSEu)/J)/(SSEu/(N-K))
pval<-1-pf(fval,J,N-K)
mod8<-lm(faminc~hedu+wedu+kl6, data=edu_inc)
mod9<-lm(faminc~hedu+kl6+xtra_x5+xtra_x6, data=edu_inc)
anova(mod8)
# R2 ajustada
summary(mod8)
# R2 ajustada
summary(mod7)
# R2 ajustada
summary(mod8)
summary(mod8)$adj.r.squared
summary(mod8)$r.squared
anova(mod9)
mod9<-lm(faminc~hedu+kl6+xtra_x5+xtra_x6, data=edu_inc)
# R2 ajustada
summary(mod9)
SSEmod8<-anova(mod8)[4,2]
SSEmod8
# R2 ajustada
summary(mod9)
SSEmod9<-anova(mod9)[5,2]
SSEmod9
anova(mod8,mod9)
mod8<-lm(faminc~hedu+wedu+kl6, data=edu_inc)
mod9<-lm(faminc~hedu+kl6+xtra_x5+xtra_x6, data=edu_inc)
anova(mod8)
#### Primer modelo
kable(tidy(mod8),caption="Tercer modelo")
#### Segundo modelo
kable(tidy(mod9),caption="Cuarto modelo")
mod8<-lm(faminc~hedu+wedu+kl6, data=edu_inc)
mod9<-lm(faminc~hedu+kl6+xtra_x5+xtra_x6, data=edu_inc)
SSEmod8<-anova(mod8)[4,2]
SSEmod8
SSEmod9<-anova(mod9)[5,2]
SSEmod9
summary(mod9)$adj.r.squared
summary(mod9)$r.squared
summary(mod8)$adj.r.squared
summary(mod8)$r.squared
SSEmod6<-anova(mod6)[3,2]
SSEmod6
SSEmod7<-anova(mod7)[2,2]
SSEmod7
SSEmod8<-anova(mod8)[4,2]
SSEmod8
SSEmod9<-anova(mod9)[5,2]
SSEmod9
anova(mod6)
anova(mod7)
anova(mod8)
anova(mod9)
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
edu_inc<-read_excel("C:/Users/Carlos Campos/Desktop/Noveno semestre/Econometría/Bases de datos/edu_inc.xlsx")
attach(edu_inc)
# Primer modelo
# Ingreso familiar ~ HEDU + WEDU
mod6<-lm(faminc~hedu+wedu, data=edu_inc)
# Primer modelo
# Ingreso familiar ~ HEDU
mod7<-lm(faminc~hedu, data=edu_inc)
# R2 ajustada
summary(mod6)
anova(mod6)
# R2 ajustada
summary(mod6)
anova(mod6)
# R2 ajustada
summary(mod6)
install.packages("psych")
library(psych)
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
# Cargamos la base de datos
datos<-read_excel("C:/Users/Carlos Campos/Desktop/Noveno semestre/Econometría/Bases de datos/koop_tobias_87.xlsx")
# Creamos una nueva columna con los logaritmo natural de la columna wage
datos$ln_wage<-sapply(datos$wage,FUN=function(x){log(x)})
library(psych)
library(psych)
corPlot(datos)
corPlot(datos)[,c("educ","exper","score","motheduc","fatheduc","broken","sibs","ln_wage")]
corPlot(datos)[,c(2:8,10)]
corPlot(datos)[,2:8]
corPlot(datos[,2:8])
corPlot(datos[,3:8])
correlacion<-round(cor(datos), 1)
corrplot(correlacion, method="number", type="upper")
install.packages("ggplot2")
install.packages("corrplot")
library(corrplot)
correlacion<-round(cor(datos), 1)
corrplot(correlacion, method="number", type="upper")
tidy(datos)
tidy(datos)[c(2:8,9),c(3,4,5)]
tidy(datos)[c(2:8,9),c(1,3,4,5)]
tidy(datos)
tidy(datos)[c(2:8,9),c(1,3,4,5)]
tidy(datos)
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
library(nlWaldTest)
library(forecast)
library(tables)
library(haven)
library(nnet)
library(MCMCpack)
library(sampleSelection)
library(dynlm) #for the `dynlm()` function
library(orcutt) # for the `cochrane.orcutt()` function
library(nlWaldTest) # for the `nlWaldtest()` function
library(zoo) # for time series functions
library(pdfetch) # for retrieving data
library(lmtest) #for `coeftest()` and `bptest()`.
library(broom) #for `glance(`) and `tidy()`
library(car) #for `hccm()` robust standard errors
library(sandwich)
library(knitr) #for kable()
library(forecast)
setwd("C:/Users/Carlos Campos/Desktop/Noveno semestre/Econometría/Bases de datos")
okun<-read_excel("okun.xlsx")
attach(okun)
check.ts<-is.ts(okun)
okun.ts<-ts(okun,start=c(1985,2),end=c(2009,3),frequency=4)
# Para ver si es un time series
check.ts<-is.ts(okun)
check.ts
#Creamos un time series
okun.ts<-ts(okun,start=c(1985,2),end=c(2009,3),frequency=4)
okun
View(okun)
#Creamos un time series
okun.ts<-ts(okun,start=c(1985,2),end=c(2009,3),frequency=4)
View(okun.ts)
# Modelo de OKUN
okun.dyn<-dynlm(d(u)~g,data=okun.ts)
okun.dyn
# Modelo de OKUN
# Con un solo regresor
okun.dyn<-dynlm(d(u)~g,data=okun.ts)
okun.dyn
# Modelo con 3 rezagos (anotado en libreta)
okunL3.dyn<-dynlm(d(u)~L(g,0:3),data=okun.ts)
kable(tidy(summary(okunL3.dyn)), digits=4,
caption="Modelo de rezagos distribuidos con 3 rezagos")
# Modelo con 2 rezagos (anotado en libreta)
okunL2.dyn<-dynlm(d(u)~L(g,0:2),data=okun.ts)
kable(tidy(summary(okunL2.dyn)), digits=4,
caption="Modelo de rezagos distribuidos con 2 rezagos")
# Modelo con 4 rezagos
okunL4.dyn<-dynlm(d(u)~L(g,0:4),data=okun.ts)
kable(tidy(summary(okunL4.dyn)), digits=4,
caption="Modelo de rezagos distribuidos con 4 rezagos")
glL3<-glance(okunL3.dyn)[c("r.squared","statistic","AIC","BIC")]
glL2<-glance(okunL2.dyn)[c("r.squared","statistic","AIC","BIC")]
tabl<-rbind(glL3,as.numeric(glL2))
kable(tabl,caption="Estadísticas para el modelo de Okun")
growth_rate<-okun.ts[,"g"]
acf(growth_rate)
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
library(nlWaldTest)
library(forecast)
library(tables)
library(haven)
library(nnet)
library(MCMCpack)
library(sampleSelection)
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
library(nlWaldTest)
library(forecast)
library(tables)
library(haven)
library(nnet)
library(MCMCpack)
library(sampleSelection)
# Teams
library(dynlm) #for the `dynlm()` function
library(orcutt) # for the `cochrane.orcutt()` function
library(nlWaldTest) # for the `nlWaldtest()` function
library(zoo) # for time series functions
library(pdfetch) # for retrieving data
library(lmtest) #for `coeftest()` and `bptest()`.
library(broom) #for `glance(`) and `tidy()`
library(car) #for `hccm()` robust standard errors
library(sandwich)
library(knitr) #for kable()
library(forecast)
setwd("C:/Users/Carlos Campos/Desktop/Noveno semestre/Econometría/Bases de datos")
setwd("C:/Users/Carlos Campos/Desktop/Noveno semestre/Econometría/Bases de datos")
okun<-read_excel("okun5_aus.xlsx")
attach(okun)
okun
glance(okun)
View(okun)
#Creamos un time series
okun.ts<-ts(okun,start=c(1985,2),end=c(2009,3),frequency=4)
#Creamos un time series
okun.ts<-ts(okun,start=c(1978,2),end=c(2016,2),frequency=4)
okunL4.dyn<-dynlm(d(u)~L(g,0:4),data=okun.ts)
kable(tidy(summary(okunL4.dyn)), digits=4,
caption="Modelo de rezagos distribuidos con 4 rezagos")
okunL4.dyn$residuals
okunL4.dyn$residuals
acf(okunL4.dyn$residuals)
residuals<okunL4.dyn$residuals
residuals<-okunL4.dyn$residuals
acf(residuals)
bgtest(okunL4.dyn)
bgtest(okunL4.dyn, order=4)
# Modelos con step y nls
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
library(nlWaldTest)
library(forecast)
library(tables)
library(haven)
library(nnet)
library(MCMCpack)
library(sampleSelection)
library(corrplot)
library(PerformanceAnalytics)
library(tidyverse)
library(penalized)
bgtest(okunL4.dyn, order=4)
# Cargamos la base de datos
setwd("C:/Users/Carlos Campos/Desktop/GitHub/AIR-2022-02/Proyecto 2/R")
database<-read.csv("database (2).csv",header=TRUE)
# Nos quedamos solo con las observaciones donde todas las variables macroeconómicas empiezan
# a tomar valores
datos<-database[50:nrow(database),c(-1)]
attach(datos)
# Convertimos estas dos columnas a tipo numeric para poder correr el modelo
datos$td<-as.numeric(datos$td)
datos$ln_inpp<-as.numeric(datos$ln_inpp)
# Nos quedamos solo con las observaciones donde todas las variables macroeconómicas empiezan
# a tomar valores
datos<-database[50:nrow(database),c(-1)]
attach(datos)
# Convertimos estas dos columnas a tipo numeric para poder correr el modelo
datos$td<-as.numeric(datos$td)
datos$ln_inpp<-as.numeric(datos$ln_inpp)
# ////////////////////////////////////////////////////////////////////
# ////////////////////////////////////////////////////////////////////
# TBM
pd_tbm <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "TBM")
pd_tbm<-pd_tbm[50:nrow(database),]
tbm_empresas<-pd_tbm$Empresas
score_empresasTBM<-vector()
score_empresasTBM<-log(tbm_empresas/(1-tbm_empresas))
modelo1<-lm(score_empresasTBM~.,data=datos)
modelo1<-lm(score_empresasTBM~.,data=datos)
step(modelo1,direction="both",trace=0)
prueba1_mod<-lm(score_empresasTBM~tasa_cetes+pib+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(prueba1_mod)
# Modelo con NLS
modeloNLS_1 <- nls(formula =  score_empresasTBMR ~ a+b1*tasa_cetes+b2*pib+b3*td+b4*ln_ipc+b5*ln_actvindustrial+b6*ln_inpp,
data = datos,
start = list(a = 0,b1 = 0.0,b2 = 0, b3 = 0,b4 = 0,b5 = 0,b6 = 0),
lower = c(a = -Inf,b1 = 0,b2 = -Inf, b3 = 0,b4 = -Inf,b5 = -Inf,b6 = 0),
upper = c(a = Inf,b1 = Inf,b2 = 0, b3 = Inf,b4 = 0,b5=0,b6=Inf),
algorithm = "port")
# Visualizamos los resultados de los coeficientes
c.modeloNLS <- data.frame(t(coef(modeloNLS)))
# Modelo con NLS
modeloNLS_1 <- nls(formula =  score_empresasTBMR ~ a+b1*tasa_cetes+b2*pib+b3*td+b4*ln_ipc+b5*ln_actvindustrial+b6*ln_inpp,
data = datos,
start = list(a = 0,b1 = 0.0,b2 = 0, b3 = 0,b4 = 0,b5 = 0,b6 = 0),
lower = c(a = -Inf,b1 = 0,b2 = -Inf, b3 = 0,b4 = -Inf,b5 = -Inf,b6 = 0),
upper = c(a = Inf,b1 = Inf,b2 = 0, b3 = Inf,b4 = 0,b5=0,b6=Inf),
algorithm = "port")
datos
View(datos)
# Cargamos la base de datos
setwd("C:/Users/Carlos Campos/Desktop/GitHub/AIR-2022-02/Proyecto 2/R")
database<-read.csv("database (2).csv",header=TRUE)
# Nos quedamos solo con las observaciones donde todas las variables macroeconómicas empiezan
# a tomar valores
datos<-database[50:nrow(database),c(-1)]
attach(datos)
# Convertimos estas dos columnas a tipo numeric para poder correr el modelo
datos$td<-as.numeric(datos$td)
datos$ln_inpp<-as.numeric(datos$ln_inpp)
# ////////////////////////////////////////////////////////////////////
# ////////////////////////////////////////////////////////////////////
# TBM
pd_tbm <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "TBM")
pd_tbm<-pd_tbm[50:nrow(database),]
####################################################################### TBM EMPRESAS
tbm_empresas<-pd_tbm$Empresas
# Sacamos el score
score_empresasTBM<-vector()
score_empresasTBM<-log(tbm_empresas/(1-tbm_empresas))
# Modelo lm
modelo1<-lm(score_empresasTBM~.,data=datos)
# Con la función step obtenemos cuáles son las mejores variables para el score de empresas
step(modelo1,direction="both",trace=0)
prueba1_mod<-lm(score_empresasTBM~tasa_cetes+pib+td+ln_ipc+ln_actvindustrial+ln_inpp, data=datos)
summary(prueba1_mod)
# Modelo con NLS
modeloNLS_1 <- nls(formula =  score_empresasTBMR ~ a+b1*tasa_cetes+b2*pib+b3*td+b4*ln_ipc+b5*ln_actvindustrial+b6*ln_inpp,
data = datos,
start = list(a = 0,b1 = 0.0,b2 = 0, b3 = 0,b4 = 0,b5 = 0,b6 = 0),
lower = c(a = -Inf,b1 = 0,b2 = -Inf, b3 = 0,b4 = -Inf,b5 = -Inf,b6 = 0),
upper = c(a = Inf,b1 = Inf,b2 = 0, b3 = Inf,b4 = 0,b5=0,b6=Inf),
algorithm = "port")
