qf(0.05, 3, 347, lower.tail=F)
library(nnet, lib.loc = "C:/Program Files/R/R-4.2.1/library")
detach("package:nnet", unload = TRUE)
install.packages("nnet")
install.packages("MCMCpack")
install.packages("sampleSelection")
library(zoo) # for time series functions
library(pdfetch) # for retrieving data
library(lmtest) #for `coeftest()` and `bptest()`.
library(broom) #for `glance(`) and `tidy()`
library(car) #for `hccm()` robust standard errors
library(sandwich)
library(knitr) #for kable()
library(forecast)
library(orcutt) # for the `cochrane.orcutt()` function
# Set working directory
setwd("C:/Users/Carlos Campos/Desktop/GitHub/AIR-2022-02/Proyecto 2/R")
datos<-read.csv("database.csv",header=TRUE)
datos
View(datos)
datos$td[50]
datos$td[49]
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
datos[,-c(1)]
database<-read.csv("database.csv",header=TRUE)
datos<-database[,-c(1)]
View(datos)
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
cor(datos)
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
library(nlWaldTest)
library(forecast)
library(tables)
library(haven)
library(nnet)
library(MCMCpack)
library(sampleSelection)
type(datos[1])
clas(datos[1])
class(datos[1])
class(datos$tasa_cetes)
cor(datos$tasa_cetes)
cor(datos$tasa_cetes,datos$inflacion)
class(datos)
corPlot(datos, method='pearson')
library(corrplot)
corPlot(datos, method='pearson')
corrplot(datos, method='pearson')
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
corrplot(datos, method='number')
corrplot(datos, method='number',type"upper")
corrplot(datos, method='number',type="upper")
cor.table = cor(datos)
length(databse)
length(database)
nrow(database)
# Restringimos el modelo a partir de 2005
datos<-database[50:nrow(database),-c(1)]
View(datos)
# Restringimos el modelo a partir de 2005
datos<-database[49:nrow(database),-c(1)]
# Restringimos el modelo a partir de 2005, esto se hace para considerar los valores
# de la TD
datos<-database[50:nrow(database),-c(1)]
class(datos)
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
cor.table = cor(datos)
corrplot(datos, method='number',type="upper")
# Restringimos el modelo a partir de 2005, esto se hace para considerar los valores
# de la TD
datos<-database[50:nrow(database),-c(1)]
class(datos$tasa_cetes)
class(datos$inflacion)
class(datos$pib)
class(datos$ln_tc)
class(datos$td)
class(datos$ln_ipc)
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos[,-c(5)]), 2)
corrplot(correlacion, method="number", type="upper")
corrplot(datos[,-c(5)], method='number',type="upper")
correlacion<-round(cor(datos[,-c(5)]), 2)
corrplot(correlacion, method="number", type="upper")
as.numeric(datos$td)
datos$td<-as.numeric(datos$td)
datos
datos$td<-as.numeric(datos$td)
datos
View(datos)
class(datos$tasa_cetes)
class(datos$inflacion)
class(datos$pib)
class(datos$ln_tc)
class(datos$td)
class(datos$ln_ipc)
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
corrplot(correlacion, method="number", type="upper")
install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(datos, histogram=TRUE, pch=19)
pairs(datos)
# Otro gráfico
corPlot(datos, cex = 1.2)
install.packages("psych")
# Otro gráfico
library(psych)
# Otro gráfico
library(psych)
corPlot(datos, cex = 1.2)
corPlot(datos, cex = 1.4)
corPlot(datos, cex = 1.2)
corPlot(datos, cex = 1.2)
# Otro gráfico
library(psych)
corPlot(datos, cex = 1.2)
# Creamos un gráfico de correlaciones
correlacion<-round(cor(datos), 2)
corrplot(correlacion, method="number", type="upper")
chart.Correlation(datos, histogram=TRUE, pch=19)
chart.Correlation(datos, histogram=F, pch=19)
# Otro gráfico
pairs(datos)
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
library(nlWaldTest)
library(forecast)
library(tables)
library(haven)
library(nnet)
library(MCMCpack)
library(sampleSelection)
library(corrplot)
setwd("C:/Users/Carlos Campos/Desktop/GitHub/AIR-2022-02/Proyecto 2/R")
database<-read.csv("database.csv",header=TRUE)
datos<-database[50:nrow(database),-c(1)]
class(datos)
# La columna de td la convertimos en 'numeric', ya que los valores NULL hicieron
# que R leyera la columna como character
datos$td<-as.numeric(datos$td)
correlacion<-round(cor(datos), 2)
corrplot(correlacion, method="number", type="upper")
# Cargamos los datos de la proxy de PD
#database<-read.csv("database.csv",header=TRUE)
pd_tbm <- read.csv("C:/Users/Carlos Campos/Desktop/Noveno semestre/Admon. Integral de Riesgos/Proyectos/Proyecto 2/Proyecto 2 Stress Testing (Equpo 9).xlsx",
sheet = "TBM")
pd_tbm <- read.csv("database.csv", sheet = "TBM")
pd_tbm <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "TBM")
pd_santdr <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "Santander")
View(pd_santdr)
View(pd_tbm)
class(pd_tbm)
View(pd_tbm)
class(pd_santdr)
class(datos$tasa_cetes)
class(pd_tbm$Empresas)
class(pd_tbm$Consumo)
class(pd_tbm$Vivienda)
class(datos)
score<-vector()
nrow(datos)
View(database)
# Tomamos solo las observaciones correspondientes a 2005 en adelante
pd_tbm<-pd_tbm[50:nrow(database),]
pd_santdr<-pd_santdr[50:nrow(database),]
norw(pd_tbm)
nrow(pd_tbm)
nrow(datos)
log(1)
score<-vector()
for (i in 1:nrow(datos)){
score[i]<-log(pd_tbm[i]/(1-pd_tbm[i]))
}
score<-vector()
tbm_empresas<-pd_tbm$Empresas
for (i in 1:nrow(datos)){
score[i]<-log(tbm_empresas[i]/(1-tbm_empresas[i]))
}
score
attach(datos)
View(datos)
modelo1<-lm(y~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
modelo1
anova(modelo1)
modelo1
anova(modelo1)
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+ln_ipc,data=datos)
modelo1
anova(modelo1)
summary(modelo1)
View(datos)
tbm_empresas
score
summary(modelo1)
View(modelo1)
summary(modelo1)$coefficients
summary(modelo1)$coefficients[1]
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
modelo1
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
modelo1
anova(modelo1)
summary(modelo1)$coefficients
b0<-summary(modelo1)$coefficients[1]
b1<-summary(modelo1)$coefficients[2]
b2<-summary(modelo1)$coefficients[3]
b3<-summary(modelo1)$coefficients[4]
b4<-summary(modelo1)$coefficients[5]
b5<-summary(modelo1)$coefficients[6]
b6<-summary(modelo1)$coefficients[7]
tasa_cetes[1]
datos[1,]
betas<-c(b0,b1,b2,b3,b4,b5,b6)
betas*datos[1,]
sum(betas*datos[1,])
sum(betas*datos[1,])+b0
b0<-summary(modelo1)$coefficients[1]
b1<-summary(modelo1)$coefficients[2]
b2<-summary(modelo1)$coefficients[3]
b3<-summary(modelo1)$coefficients[4]
b4<-summary(modelo1)$coefficients[5]
b5<-summary(modelo1)$coefficients[6]
b6<-summary(modelo1)$coefficients[7]
betas<-c(b1,b2,b3,b4,b5,b6)
sum(betas*datos[1,])+b0
1/(1+exp(-2.9449))
tbm_empresas<-pd_tbm$Empresas
tbm_empresas<-pd_tbm$Empresas
tbm_empresas
tbm_empresas[1]
score<-vector()
for (i in 1:nrow(datos)){
score[i]<-log(tbm_empresas[i]/(1-tbm_empresas[i]))
}
score
score[1]
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
modelo1
anova(modelo1)
b0<-summary(modelo1)$coefficients[1]
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
modelo1
anova(modelo1)
b0<-summary(modelo1)$coefficients[1]
b1<-summary(modelo1)$coefficients[2]
b2<-summary(modelo1)$coefficients[3]
b3<-summary(modelo1)$coefficients[4]
b4<-summary(modelo1)$coefficients[5]
b5<-summary(modelo1)$coefficients[6]
b6<-summary(modelo1)$coefficients[7]
betas<-c(b1,b2,b3,b4,b5,b6)
sum(betas*datos[1,])+b0
1/(1+exp(-2.9449))
logit(score[1])
score[1]
1/(1+exp(-score[1]))
ln_tc
b0+b1*tasa_cetes[1]+b2*inflacion[1]+b3*pib[1]+b4*ln_tc[1]+b5*td[1]+b6*ln_ipc[1]
summary(modelo1)
b0+b1*tasa_cetes+b2*inflacion+b3*pib+b4*ln_tc+b5*td+b6*ln_ipc
score
b0+b1*tasa_cetes+b2*inflacion+b3*pib+b4*ln_tc+b5*td+b6*ln_ipc
b0+b1*tasa_cetes+b2*inflacion+b3*pib+b4*ln_tc+b5*td+b6*ln_ipc
score
datos<-database[50:nrow(database),-c(1)]
tbm_empresas<-pd_tbm$Empresas
score<-vector()
for (i in 1:nrow(datos)){
score[i]<-log(tbm_empresas[i]/(1-tbm_empresas[i]))
}
attach(datos)
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
modelo1
anova(modelo1)
b0<-summary(modelo1)$coefficients[1]
b1<-summary(modelo1)$coefficients[2]
b2<-summary(modelo1)$coefficients[3]
b3<-summary(modelo1)$coefficients[4]
b4<-summary(modelo1)$coefficients[5]
b5<-summary(modelo1)$coefficients[6]
b6<-summary(modelo1)$coefficients[7]
b0+b1*tasa_cetes+b2*inflacion+b3*pib+b4*ln_tc+b5*td+b6*ln_ipc
datos<-database[50:nrow(database),-c(1)]
attach(datos)
b0+b1*tasa_cetes+b2*inflacion+b3*pib+b4*ln_tc+b5*td+b6*ln_ipc
b5
td
class(td)
class(tasa_cetes)
datos<-database[50:nrow(database),-c(1)]
datos$td<-as.numeric(datos$td)
tbm_empresas<-pd_tbm$Empresas
score<-vector()
for (i in 1:nrow(datos)){
score[i]<-log(tbm_empresas[i]/(1-tbm_empresas[i]))
}
attach(datos)
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
modelo1
summary(modelo1)$coefficients
b0<-summary(modelo1)$coefficients[1]
b1<-summary(modelo1)$coefficients[2]
b2<-summary(modelo1)$coefficients[3]
b3<-summary(modelo1)$coefficients[4]
b4<-summary(modelo1)$coefficients[5]
b5<-summary(modelo1)$coefficients[6]
b6<-summary(modelo1)$coefficients[7]
b0+b1*tasa_cetes+b2*inflacion+b3*pib+b4*ln_tc+b5*td+b6*ln_ipc
score
summary(modelo1)$coefficients
library(knitr)
library(xtable)
library(printr)
library(stargazer)
library(rmarkdown)
library(effects)
library(car)
library(AER)
library(broom)
library(stats)
library(lmtest)
library(sandwich)
library(tinytex)
library(openxlsx)
library(readxl)
library(nlWaldTest)
library(forecast)
library(tables)
library(haven)
library(nnet)
library(MCMCpack)
library(sampleSelection)
library(corrplot)
setwd("C:/Users/Carlos Campos/Desktop/GitHub/AIR-2022-02/Proyecto 2/R")
database<-read.csv("database.csv",header=TRUE)
# Restringimos el modelo a partir de 2005, esto se hace para considerar los valores
# de la TD
datos<-database[50:nrow(database),-c(1)]
# La columna de td la convertimos en 'numeric', ya que los valores NULL hicieron
# que R leyera la columna como character
datos$td<-as.numeric(datos$td)
datos
class(datos$tasa_cetes)
class(datos$inflacion)
class(datos$pib)
class(datos$ln_tc)
class(datos$td)
class(datos$ln_ipc)
# Cargamos los datos de la proxy de PD
pd_tbm <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "TBM")
pd_santdr <- read_excel("Proyecto 2 Stress Testing (E9).xlsx", sheet = "Santander")
# Tomamos solo las observaciones correspondientes a 2005 en adelante
pd_tbm<-pd_tbm[50:nrow(database),]
pd_santdr<-pd_santdr[50:nrow(database),]
tbm_empresas<-pd_tbm$Empresas
View(pd_tbm)
tbm_empresas[1]
nrow(datos)
tbm_empresas[1]
log(tbm_empresas[1]/(1-tbm_empresas[1]))
score<-vector()
for (i in 1:nrow(datos)){
score[i]<-log(tbm_empresas[i]/(1-tbm_empresas[i]))
}
score[1]
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
#attach(datos)
colnames(Datos)
#attach(datos)
colnames(datos)
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
summary(modelo1)
b0<-summary(modelo1)$coefficients[1]
b1<-summary(modelo1)$coefficients[2]
b2<-summary(modelo1)$coefficients[3]
b3<-summary(modelo1)$coefficients[4]
b4<-summary(modelo1)$coefficients[5]
b5<-summary(modelo1)$coefficients[6]
b6<-summary(modelo1)$coefficients[7]
score[1]
tasa_cetes[1]
View(datos)
inflacion[1]
pib[1]
ln_tc[1]
td[1]
ln_ipc[1]
b0+b1*tasa_cetes[1]+b2*inflacion[1]+b3*pib[1]+b4*ln_tc[1]+b5*td[1]+b6*ln_ipc[1]
summary(modelo1)
View(modelo1)
summary(modelo1)$fittedvalues
summary(modelo1)$fitted.values
modelo1$fitted.values
fitted_scores<-b0+b1*tasa_cetes[1]+b2*inflacion[1]+b3*pib[1]+b4*ln_tc[1]+b5*td[1]+b6*ln_ipc[1]
fitted_scores
fitted_scores<-b0+b1*tasa_cetes+b2*inflacion+b3*pib+b4*ln_tc+b5*td+b6*ln_ipc
fitted_scores
score
diff(score,fitted_scores)
# Esta asignación está bien
score_empresasTBM<-vector()
for (i in 1:nrow(datos)){
score_empresasTBM[i]<-log(tbm_empresas[i]/(1-tbm_empresas[i]))
}
modelo1<-lm(score~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
modelo1<-lm(score_empresasTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
summary(modelo1)
b0<-summary(modelo1)$coefficients[1]
b1<-summary(modelo1)$coefficients[2]
b2<-summary(modelo1)$coefficients[3]
b3<-summary(modelo1)$coefficients[4]
b4<-summary(modelo1)$coefficients[5]
b5<-summary(modelo1)$coefficients[6]
b6<-summary(modelo1)$coefficients[7]
fitted_scores<-b0+b1*tasa_cetes+b2*inflacion+b3*pib+b4*ln_tc+b5*td+b6*ln_ipc
fitted_scores
tbm_consumo<-pd_tbm$Consumo
score_consumoTBM<-vector()
for (i in 1:nrow(datos)){
score_consumoTBM[i]<-log(tbm_consumo[i]/(1-tbm_consumo[i]))
}
modelo2<-lm(score_consumoTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
summary(modelo2)
tbm_vivienda<-pd_tbm$Vivienda
score_viviendaTBM<-vector()
score_viviendaTBM<-vector()
for (i in 1:nrow(datos)){
score_viviendaTBM[i]<-log(tbm_vivienda[i]/(1-tbm_vivienda[i]))
}
modelo3<-lm(score_viviendaTBM~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
summary(modelo3)
santdr_empresas<-pd_santdr$Empresas
score_empresasSANTDR<-vector()
santdr_empresas<-pd_santdr$Empresas
score_empresasSANTDR<-vector()
for (i in 1:nrow(datos)){
score_empresasSANTDR[i]<-log(santdr_empresas[i]/(1-santdr_empresas[i]))
}
modelo4<-lm(score_empresasSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
summary(modelo4)
santdr_consumo<-pd_santdr$Consumo
score_cpnsumoSANTDR<-vector()
santdr_consumo<-pd_santdr$Consumo
score_cpnsumoSANTDR<-vector()
for (i in 1:nrow(datos)){
score_consumoSANTDR[i]<-log(santdr_consumo[i]/(1-santdr_consumo[i]))
}
score_consumoSANTDR<-vector()
for (i in 1:nrow(datos)){
score_consumoSANTDR[i]<-log(santdr_consumo[i]/(1-santdr_consumo[i]))
}
modelo5<-lm(score_consumoSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
santdr_consumo<-pd_santdr$Consumo
score_consumoSANTDR<-vector()
for (i in 1:nrow(datos)){
score_consumoSANTDR[i]<-log(santdr_consumo[i]/(1-santdr_consumo[i]))
}
modelo5<-lm(score_consumoSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
santdr_consumo<-pd_santdr$Consumo
score_consumoSANTDR<-vector()
for (i in 1:nrow(datos)){
score_consumoSANTDR[i]<-log(santdr_consumo[i]/(1-santdr_consumo[i]))
}
modelo5<-lm(score_consumoSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
pd_santdr$Consumo
santdr_consumo<-pd_santdr$Consumo
score_consumoSANTDR<-vector()
for (i in 1:nrow(datos)){
score_consumoSANTDR[i]<-log(santdr_consumo[i]/(1-santdr_consumo[i]))
}
modelo5<-lm(score_consumoSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
score_consumoSANTDR
santdr_vivienda<-pd_santdr$Vivienda
santdr_vivienda<-pd_santdr$Vivienda
score_viviendaSANTDR<-vector()
for (i in 1:nrow(datos)){
score_viviendaSANTDR[i]<-log(santdr_vivienda[i]/(1-santdr_vivienda[i]))
}
modelo6<-lm(score_viviendaSANTDR~tasa_cetes+inflacion+pib+ln_tc+td+ln_ipc,data=datos)
summary(modelo6)
