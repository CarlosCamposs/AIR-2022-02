View(VaR_SH180)
View(VaR_SH360)
View(VaR_SM1)
View(VaR_SM30)
View(VaR_SM180)
View(VaR_SM360)
View(VaR_Boots1)
View(VaR_Boots30)
View(VaR_Boots180)
View(VaR_Boots360)
View(VaR_AE1)
View(VaR_AE30)
View(VaR_AE180)
View(VaR_AE360)
VaRBoots95<-data.frame()
VaRBoots975<-data.frame()
VaRBoots99<-data.frame()
PL_EmisorasBoots<-data.frame()
for (i in 1:100){
# Hacemos un remuestreo del P&L de cada emisora y lo metemos en un dataframe llamado PL_EmisorasBoots
# el remuestro de cada emisora se mete en una columna del de dataframe "PL_EmisorasBoots"
for(k in 1:10){
for (j in 1:length(PL_Portafolio$WALMEX.MX.Close)){
PL_EmisorasBoots[j,k]<-sample(PL_Portafolio[,k], size=length(PL_Portafolio$WALMEX.MX.Close), replace = TRUE)[j]
}
}
# Calculamos el VaR a diferentes niveles de confianza para cada emisora
for (j in 1:10){
VaRBoots95[i,j]<-quantile(PL_EmisorasBoots[,j],0.95)
VaRBoots975[i,j]<-quantile(PL_EmisorasBoots[,j],0.975)
VaRBoots99[i,j]<-quantile(PL_EmisorasBoots[,j],0.99)
}
}
VaRBoots95<-data.frame()
VaRBoots975<-data.frame()
VaRBoots99<-data.frame()
PL_EmisorasBoots<-data.frame()
for (i in 1:100){
# Hacemos un remuestreo del P&L de cada emisora y lo metemos en un dataframe llamado PL_EmisorasBoots
# el remuestro de cada emisora se mete en una columna del de dataframe "PL_EmisorasBoots"
for(k in 1:10){
for (j in 1:length(PL_Portafolio$WALMEX.MX.Close)){
PL_EmisorasBoots[j,k]<-sample(PL_Portafolio[,k], size=length(PL_Portafolio$WALMEX.MX.Close), replace = TRUE)[j]
}
}
# Calculamos el VaR a diferentes niveles de confianza para cada emisora
for (j in 1:10){
VaRBoots95[i,j]<-quantile(PL_EmisorasBoots[,j],0.95)
VaRBoots975[i,j]<-quantile(PL_EmisorasBoots[,j],0.975)
VaRBoots99[i,j]<-quantile(PL_EmisorasBoots[,j],0.99)
}
}
# El VaR por simulacion Bootstrap de cada emisora es el promedio de cada columna
# En la primera columna colocamos los VaR de cada emisora al 95%
# En la segunda columna colocamos los VaR de cada emisora al 97.5%
# En la tecera columna colocamos los VaR de cada emisora al 99%
VaR_Boots1<-data.frame()
for (j in 1:10){
VaR_Boots1[j,1]<- colMeans(VaRBoots95)[j]
VaR_Boots1[j,2]<- colMeans(VaRBoots975)[j]
VaR_Boots1[j,3]<- colMeans(VaRBoots99)[j]
}
colnames(VaR_Boots1)<-c("95%","97.5%","99%")
rownames(VaR_Boots1)<-cartera
# -------------------------------------------------------------------------------
# Resultados
# Hacemos la suma por columnas para obtener el VaR No Diversificado - 1 dia
VaR_Boots1["VaR No Diversificado",]<-colSums(VaR_Boots1)
View(VaR_Boots1)
# Obtenemos el VaR No Diversificado 30 - dias
VaR_Boots30<-VaR_Boots1*30
View(VaR_Boots30)
# Obtenemos el VaR No Diversificado 180 - dias
VaR_Boots180<-VaR_Boots1*180
View(VaR_Boots180)
# Obtenemos el VaR No Diversificado 360 - dias
VaR_Boots360<-VaR_Boots1*360
View(VaR_Boots360)
VaRBoots95<-data.frame()
VaRBoots975<-data.frame()
VaRBoots99<-data.frame()
PL_EmisorasBoots<-data.frame()
for (i in 1:1000){
# Hacemos un remuestreo del P&L de cada emisora y lo metemos en un dataframe llamado PL_EmisorasBoots
# el remuestro de cada emisora se mete en una columna del de dataframe "PL_EmisorasBoots"
for(k in 1:10){
for (j in 1:length(PL_Portafolio$WALMEX.MX.Close)){
PL_EmisorasBoots[j,k]<-sample(PL_Portafolio[,k], size=length(PL_Portafolio$WALMEX.MX.Close), replace = TRUE)[j]
}
}
# Calculamos el VaR a diferentes niveles de confianza para cada emisora
for (j in 1:10){
VaRBoots95[i,j]<-quantile(PL_EmisorasBoots[,j],0.95)
VaRBoots975[i,j]<-quantile(PL_EmisorasBoots[,j],0.975)
VaRBoots99[i,j]<-quantile(PL_EmisorasBoots[,j],0.99)
}
}
# El VaR por simulacion Bootstrap de cada emisora es el promedio de cada columna
# En la primera columna colocamos los VaR de cada emisora al 95%
# En la segunda columna colocamos los VaR de cada emisora al 97.5%
# En la tecera columna colocamos los VaR de cada emisora al 99%
VaR_Boots1<-data.frame()
for (j in 1:10){
VaR_Boots1[j,1]<- colMeans(VaRBoots95)[j]
VaR_Boots1[j,2]<- colMeans(VaRBoots975)[j]
VaR_Boots1[j,3]<- colMeans(VaRBoots99)[j]
}
colnames(VaR_Boots1)<-c("95%","97.5%","99%")
rownames(VaR_Boots1)<-cartera
# -------------------------------------------------------------------------------
# Resultados
# Hacemos la suma por columnas para obtener el VaR No Diversificado - 1 dia
VaR_Boots1["VaR No Diversificado",]<-colSums(VaR_Boots1)
View(VaR_Boots1)
# Obtenemos el VaR No Diversificado 30 - dias
VaR_Boots30<-VaR_Boots1*30
View(VaR_Boots30)
# Obtenemos el VaR No Diversificado 180 - dias
VaR_Boots180<-VaR_Boots1*180
View(VaR_Boots180)
# Obtenemos el VaR No Diversificado 360 - dias
VaR_Boots360<-VaR_Boots1*360
View(VaR_Boots360)
VaRBoots95<-data.frame()
VaRBoots975<-data.frame()
VaRBoots99<-data.frame()
PL_EmisorasBoots<-data.frame()
VaRBoots95<-data.frame()
VaRBoots975<-data.frame()
VaRBoots99<-data.frame()
PL_EmisorasBoots<-data.frame()
for (i in 1:5000){
# Hacemos un remuestreo del P&L de cada emisora y lo metemos en un dataframe llamado PL_EmisorasBoots
# el remuestro de cada emisora se mete en una columna del de dataframe "PL_EmisorasBoots"
for(k in 1:10){
for (j in 1:length(PL_Portafolio$WALMEX.MX.Close)){
PL_EmisorasBoots[j,k]<-sample(PL_Portafolio[,k], size=length(PL_Portafolio$WALMEX.MX.Close), replace = TRUE)[j]
}
}
# Calculamos el VaR a diferentes niveles de confianza para cada emisora
for (j in 1:10){
VaRBoots95[i,j]<-quantile(PL_EmisorasBoots[,j],0.95)
VaRBoots975[i,j]<-quantile(PL_EmisorasBoots[,j],0.975)
VaRBoots99[i,j]<-quantile(PL_EmisorasBoots[,j],0.99)
}
}
library(TTR)
library(tidyquant)
library(quantmod)
library(knitr) #for kable()
library (dplyr)
#######################
# Cargamos los datos
cartera=c("WALMEX.MX","AMXL.MX","GFNORTEO.MX",
"GMEXICOB.MX","TLEVISACPO.MX","KIMBERA.MX",
"GCARSOA1.MX","GAPB.MX","PE&OLES.MX","LABB.MX")
getSymbols(cartera,src = "yahoo",from="2019-01-01",to="2022-09-30")
precios1<-WALMEX.MX$WALMEX.MX.Close
precios2<-AMXL.MX$AMXL.MX.Close
precios3<-GFNORTEO.MX$GFNORTEO.MX.Close
precios4<-GMEXICOB.MX$GMEXICOB.MX.Close
precios5<-TLEVISACPO.MX$TLEVISACPO.MX.Close
precios6<-KIMBERA.MX$KIMBERA.MX.Close
precios7<-GCARSOA1.MX$GCARSOA1.MX.Close
precios8<-GAPB.MX$GAPB.MX.Close
precios9<-`PE&OLES.MX`$`PE&OLES.MX.Close`
precios10<-LABB.MX$LABB.MX.Close
# Unimos todos los precios de cierre en una tabla
tabla_precios<-cbind(precios1,precios2,precios3,precios4,
precios5,precios6,precios7,precios8,
precios9,precios10)
# Declaramos como dataframe a la tabla recien creada
tabla_precios<-as.data.frame(tabla_precios)
tabla_rendimientos<-data.frame()
for(i in 1:10){
for (j in 1:length(tabla_precios$WALMEX.MX.Close)){
tabla_rendimientos[j,i]<-tabla_precios[j+1,i]/tabla_precios[j,i]-1
}
}
# Le quitamos el ultimo renglon porque nos genero un NA en ese renglon
tabla_rendimientos<-tabla_rendimientos[c(-length(tabla_rendimientos$V1)),]
#######################
# Ultimo precio - Portafolio
ultimo_precio<-tabla_precios[c(length(tabla_precios$WALMEX.MX.Close)),]
ultimo_precio<-as.data.frame(ultimo_precio)
tabla_revaluacion<-data.frame()
for(i in 1:10){
for( j in 1:length(tabla_rendimientos$V1)){
tabla_revaluacion[j,i]<-ultimo_precio[,i]*(1+tabla_rendimientos[j,i])
}
}
PL_Portafolio<-data.frame()
for (i in 1:length(tabla_revaluacion)){
for (j in 1:length(tabla_revaluacion$V1)){
PL_Portafolio[j,i]<-ultimo_precio[i]-tabla_revaluacion[j,i]
}
}
VaRBoots95<-data.frame()
VaRBoots975<-data.frame()
VaRBoots99<-data.frame()
PL_EmisorasBoots<-data.frame()
for (i in 1:5000){
# Hacemos un remuestreo del P&L de cada emisora y lo metemos en un dataframe llamado PL_EmisorasBoots
# el remuestro de cada emisora se mete en una columna del de dataframe "PL_EmisorasBoots"
for(k in 1:10){
for (j in 1:length(PL_Portafolio$WALMEX.MX.Close)){
PL_EmisorasBoots[j,k]<-sample(PL_Portafolio[,k], size=length(PL_Portafolio$WALMEX.MX.Close), replace = TRUE)[j]
}
}
# Calculamos el VaR a diferentes niveles de confianza para cada emisora
for (j in 1:10){
VaRBoots95[i,j]<-quantile(PL_EmisorasBoots[,j],0.95)
VaRBoots975[i,j]<-quantile(PL_EmisorasBoots[,j],0.975)
VaRBoots99[i,j]<-quantile(PL_EmisorasBoots[,j],0.99)
}
}
# El VaR por simulacion Bootstrap de cada emisora es el promedio de cada columna
# En la primera columna colocamos los VaR de cada emisora al 95%
# En la segunda columna colocamos los VaR de cada emisora al 97.5%
# En la tecera columna colocamos los VaR de cada emisora al 99%
VaR_Boots1<-data.frame()
for (j in 1:10){
VaR_Boots1[j,1]<- colMeans(VaRBoots95)[j]
VaR_Boots1[j,2]<- colMeans(VaRBoots975)[j]
VaR_Boots1[j,3]<- colMeans(VaRBoots99)[j]
}
colnames(VaR_Boots1)<-c("95%","97.5%","99%")
rownames(VaR_Boots1)<-cartera
# -------------------------------------------------------------------------------
# Resultados
# Hacemos la suma por columnas para obtener el VaR No Diversificado - 1 dia
VaR_Boots1["VaR No Diversificado",]<-colSums(VaR_Boots1)
View(VaR_Boots1)
# Obtenemos el VaR No Diversificado 30 - dias
VaR_Boots30<-VaR_Boots1*30
View(VaR_Boots30)
# Obtenemos el VaR No Diversificado 180 - dias
VaR_Boots180<-VaR_Boots1*180
View(VaR_Boots180)
# Obtenemos el VaR No Diversificado 360 - dias
VaR_Boots360<-VaR_Boots1*360
View(VaR_Boots360)
means<-colMeans(tabla_rendimientos)
sd<-c(sd(tabla_rendimientos$V1),sd(tabla_rendimientos$V2),sd(tabla_rendimientos$V3),
sd(tabla_rendimientos$V4),sd(tabla_rendimientos$V5),sd(tabla_rendimientos$V6),
sd(tabla_rendimientos$V7),sd(tabla_rendimientos$V8),sd(tabla_rendimientos$V9),
sd(tabla_rendimientos$V10))
VaRSM95<-data.frame()
VaRSM975<-data.frame()
VaRSM99<-data.frame()
means<-colMeans(tabla_rendimientos)
sd<-c(sd(tabla_rendimientos$V1),sd(tabla_rendimientos$V2),sd(tabla_rendimientos$V3),
sd(tabla_rendimientos$V4),sd(tabla_rendimientos$V5),sd(tabla_rendimientos$V6),
sd(tabla_rendimientos$V7),sd(tabla_rendimientos$V8),sd(tabla_rendimientos$V9),
sd(tabla_rendimientos$V10))
VaRSM95<-data.frame()
VaRSM975<-data.frame()
VaRSM99<-data.frame()
for(i in 1:100){
rendimientos_sim<-data.frame()
for(k in 1:10){
for(j in 1:length(tabla_rendimientos$V1)){
rendimientos_sim[j,k]<-rnorm(length(tabla_rendimientos$V1),mean = means[k],sd = sd[k])[j]
}
}
#######################
# Revaluacion
# Una vez obtenido los rendimientos simulados, procedemos a calcular la revaluacion para cada emisora
tabla_revaluacionSM<-data.frame()
for(k in 1:10){
for( j in 1:length(rendimientos_sim$V1)){
tabla_revaluacionSM[j,k]<-ultimo_precio[,k]*(1+rendimientos_sim[j,k])
}
}
#######################
# P&L indivual
# Construimos la P&L de cada emisora
PL_EmisorasSM<-data.frame()
for (k in 1:length(tabla_revaluacionSM)){
for(j in 1:length(tabla_revaluacionSM$V1)){
PL_EmisorasSM[j,k]<-ultimo_precio[k]-tabla_revaluacionSM[j,k]
}
}
#######################
# VaR - Portafolio (Simulacion Montecarlo - 1 día)
# Para cada emisora, calculamos el VaR y los guardamos en un dataframe, de modo que
# tendremos 10 valores de VaR al 95% de confianza y se guardan todos en una fila
# del dataframe VARSM95 (para los otros dos es analogo)
for(j in 1:10){
VaRSM95[i,j]<-quantile(PL_EmisorasSM[,j],probs=0.95)
VaRSM975[i,j]<-quantile(PL_EmisorasSM[,j],probs=0.975)
VaRSM99[i,j]<-quantile(PL_EmisorasSM[,j],probs=0.99)
}
}
# El VaR de MonteCarlo de cada emisora es el promedio de cada columna
# En la primera columna colocamos los VaR de cada emisora al 95%
# En la segunda columna colocamos los VaR de cada emisora al 97.5%
# En la tecera columna colocamos los VaR de cada emisora al 99%
VaR_SM1<-data.frame()
for (j in 1:10){
VaR_SM1[j,1]<- colMeans(VaRSM95)[j]
VaR_SM1[j,2]<- colMeans(VaRSM975)[j]
VaR_SM1[j,3]<- colMeans(VaRSM99)[j]
}
colnames(VaR_SM1)<-c("95%","97.5%","99%")
rownames(VaR_SM1)<-cartera
View(VaR_SM1)
# -------------------------------------------------------------------------------
# Resultados
# Hacemos la suma por columnas para obtener el VaR No Diversificado - 1 dia
VaR_SM1["VaR No Diversificado",]<-colSums(VaR_SM1)
View(VaR_SM1)
# Obtenemos el VaR No Diversificado 30 - dias
VaR_SM30<-VaR_SM1*30
View(VaR_SM30)
# Obtenemos el VaR No Diversificado 180 - dias
VaR_SM180<-VaR_SM1*180
View(VaR_SM180)
# Obtenemos el VaR No Diversificado 360 - dias
VaR_SM360<-VaR_SM1*360
View(VaR_SM360)
VaRSM95<-data.frame()
VaRSM975<-data.frame()
VaRSM99<-data.frame()
means<-colMeans(tabla_rendimientos)
sd<-c(sd(tabla_rendimientos$V1),sd(tabla_rendimientos$V2),sd(tabla_rendimientos$V3),
sd(tabla_rendimientos$V4),sd(tabla_rendimientos$V5),sd(tabla_rendimientos$V6),
sd(tabla_rendimientos$V7),sd(tabla_rendimientos$V8),sd(tabla_rendimientos$V9),
sd(tabla_rendimientos$V10))
VaRSM95<-data.frame()
VaRSM975<-data.frame()
VaRSM99<-data.frame()
for(i in 1:1000){
rendimientos_sim<-data.frame()
for(k in 1:10){
for(j in 1:length(tabla_rendimientos$V1)){
rendimientos_sim[j,k]<-rnorm(length(tabla_rendimientos$V1),mean = means[k],sd = sd[k])[j]
}
}
#######################
# Revaluacion
# Una vez obtenido los rendimientos simulados, procedemos a calcular la revaluacion para cada emisora
tabla_revaluacionSM<-data.frame()
for(k in 1:10){
for( j in 1:length(rendimientos_sim$V1)){
tabla_revaluacionSM[j,k]<-ultimo_precio[,k]*(1+rendimientos_sim[j,k])
}
}
#######################
# P&L indivual
# Construimos la P&L de cada emisora
PL_EmisorasSM<-data.frame()
for (k in 1:length(tabla_revaluacionSM)){
for(j in 1:length(tabla_revaluacionSM$V1)){
PL_EmisorasSM[j,k]<-ultimo_precio[k]-tabla_revaluacionSM[j,k]
}
}
#######################
# VaR - Portafolio (Simulacion Montecarlo - 1 día)
# Para cada emisora, calculamos el VaR y los guardamos en un dataframe, de modo que
# tendremos 10 valores de VaR al 95% de confianza y se guardan todos en una fila
# del dataframe VARSM95 (para los otros dos es analogo)
for(j in 1:10){
VaRSM95[i,j]<-quantile(PL_EmisorasSM[,j],probs=0.95)
VaRSM975[i,j]<-quantile(PL_EmisorasSM[,j],probs=0.975)
VaRSM99[i,j]<-quantile(PL_EmisorasSM[,j],probs=0.99)
}
}
# El VaR de MonteCarlo de cada emisora es el promedio de cada columna
# En la primera columna colocamos los VaR de cada emisora al 95%
# En la segunda columna colocamos los VaR de cada emisora al 97.5%
# En la tecera columna colocamos los VaR de cada emisora al 99%
VaR_SM1<-data.frame()
for (j in 1:10){
VaR_SM1[j,1]<- colMeans(VaRSM95)[j]
VaR_SM1[j,2]<- colMeans(VaRSM975)[j]
VaR_SM1[j,3]<- colMeans(VaRSM99)[j]
}
colnames(VaR_SM1)<-c("95%","97.5%","99%")
rownames(VaR_SM1)<-cartera
View(VaR_SM1)
# -------------------------------------------------------------------------------
# Resultados
# Hacemos la suma por columnas para obtener el VaR No Diversificado - 1 dia
VaR_SM1["VaR No Diversificado",]<-colSums(VaR_SM1)
View(VaR_SM1)
# Obtenemos el VaR No Diversificado 30 - dias
VaR_SM30<-VaR_SM1*30
View(VaR_SM30)
# Obtenemos el VaR No Diversificado 180 - dias
VaR_SM180<-VaR_SM1*180
View(VaR_SM180)
# Obtenemos el VaR No Diversificado 360 - dias
VaR_SM360<-VaR_SM1*360
View(VaR_SM360)
library(TTR)
library(tidyquant)
library(quantmod)
library(knitr) #for kable()
cartera=c("WALMEX.MX","AMXL.MX","GFNORTEO.MX",
"GMEXICOB.MX","TLEVISACPO.MX","KIMBERA.MX",
"GCARSOA1.MX","GAPB.MX","PE&OLES.MX","LABB.MX")
getSymbols(cartera,src = "yahoo",from="2019-01-01",to="2022-09-30")
getSymbols(cartera,src = "yahoo",from="2019-01-01",to="2022-09-30")
precios1<-WALMEX.MX$WALMEX.MX.Close
precios2<-AMXL.MX$AMXL.MX.Close
precios3<-GFNORTEO.MX$GFNORTEO.MX.Close
precios4<-GMEXICOB.MX$GMEXICOB.MX.Close
precios5<-TLEVISACPO.MX$TLEVISACPO.MX.Close
precios6<-KIMBERA.MX$KIMBERA.MX.Close
precios7<-GCARSOA1.MX$GCARSOA1.MX.Close
precios8<-GAPB.MX$GAPB.MX.Close
precios9<-`PE&OLES.MX`$`PE&OLES.MX.Close`
precios10<-LABB.MX$LABB.MX.Close
# Unimos todos los precios de cierre en una tabla
tabla_precios<-cbind(precios1,precios2,precios3,precios4,
precios5,precios6,precios7,precios8,
precios9,precios10)
# Declaramos como dataframe a la tabla recien creada
tabla_precios<-as.data.frame(tabla_precios)
tabla_rendimientos<-data.frame()
for(i in 1:10){
for (j in 1:length(tabla_precios$WALMEX.MX.Close)){
tabla_rendimientos[j,i]<-tabla_precios[j+1,i]/tabla_precios[j,i]-1
}
}
# Le quitamos el ultimo renglon porque nos genero un NA en ese renglon
tabla_rendimientos<-tabla_rendimientos[c(-length(tabla_rendimientos$V1)),]
# Ultimo precio - Portafolio
ultimo_precio<-tabla_precios[c(length(tabla_precios$WALMEX.MX.Close)),]
ultimo_precio<-as.data.frame(ultimo_precio)
tabla_revaluacion<-data.frame()
for(i in 1:10){
for( j in 1:length(tabla_rendimientos$V1)){
tabla_revaluacion[j,i]<-ultimo_precio[,i]*(1+tabla_rendimientos[j,i])
}
}
PL_Portafolio<-data.frame()
for (i in 1:length(tabla_revaluacion)){
for (j in 1:length(tabla_revaluacion$V1)){
PL_Portafolio[j,i]<-ultimo_precio[i]-tabla_revaluacion[j,i]
}
}
head(PL_Portafolio,5)
PL_Port<-data.frame()
for(i in 1:length(PL_Portafolio$WALMEX.MX.Close)){
PL_Port[i,1]<-rowSums(PL_Portafolio[i,])
}
colnames(PL_Port)<-c("PL")
PL_Portafolio<-cbind(PL_Portafolio,PL_Port)
head(PL_Portafolio,5)
head(PL_Portafolio,5)
VaRB95<-vector()
VaRB975<-vector()
VaRB99<-vector()
VaRB95<-vector()
VaRB975<-vector()
VaRB99<-vector()
for(i in 1:5000){
# Remuestreo con reemplazo de la P&L del portafolio
remuestreoBoots<-sample(PL_Portafolio$PL, size=length(PL_Portafolio$PL), replace = TRUE)
# VaR a diferentes niveles de confianza
VaR_B95<-quantile(remuestreoBoots,0.95)
VaR_B975<-quantile(remuestreoBoots,0.975)
VaR_B99<-quantile(remuestreoBoots,0.99)
# Guardamos los VaR obtenidos del remuestreo en un vector
VaRB95[i]<-VaR_B95
VaRB975[i]<-VaR_B975
VaRB99[i]<-VaR_B99
}
#######################
# VaR - Portafolio (Bootstrapping - 1 día)
# Sacamos la media
VaR_B1<-cbind(mean(VaRB95),mean(VaRB975),mean(VaRB99))
colnames(VaR_B1)<-c("95%","97.5%","99%")
#######################
# Resultados
VaR_B<-rbind(VaR_B1,VaR_B1*30,VaR_B1*180,VaR_B1*360)
rownames(VaR_B)<-c("1 dia","30 dias","180 dias", "360 dias")
kable(VaR_B,digits=4,caption = "Método de Simulación Bootstrapping- VaR Diversificado")
for(i in 1:5000){
# Remuestreo con reemplazo de la P&L del portafolio
remuestreoBoots<-sample(PL_Portafolio$PL, size=length(PL_Portafolio$PL), replace = TRUE)
# VaR a diferentes niveles de confianza
VaR_B95<-quantile(remuestreoBoots,0.95)
VaR_B975<-quantile(remuestreoBoots,0.975)
VaR_B99<-quantile(remuestreoBoots,0.99)
# Guardamos los VaR obtenidos del remuestreo en un vector
VaRB95[i]<-VaR_B95
VaRB975[i]<-VaR_B975
VaRB99[i]<-VaR_B99
}
#######################
# VaR - Portafolio (Bootstrapping - 1 día)
# Sacamos la media
VaR_B1<-cbind(mean(VaRB95),mean(VaRB975),mean(VaRB99))
colnames(VaR_B1)<-c("95%","97.5%","99%")
#######################
# Resultados
VaR_B<-rbind(VaR_B1,VaR_B1*30,VaR_B1*180,VaR_B1*360)
rownames(VaR_B)<-c("1 dia","30 dias","180 dias", "360 dias")
kable(VaR_B,digits=4,caption = "Método de Simulación Bootstrapping- VaR Diversificado")
20.5628/32.0872
32.0872(1-0.6408)
32.0872*(1-0.6408)
1-0.6408412
32.0872*(1-0.36)
1-14.9414/34.5665
34.5665*(1-0.5677)
1-20.3213/32.0936
32.0936*(1-0.3668)
1-23.8283/32.6918
